server {
    listen 80;
    server_name localhost;

    # 访问日志
    access_log /var/log/nginx/qqwry-api-access.log;
    error_log /var/log/nginx/qqwry-api-error.log;

    # 反向代理到Node.js服务
    location / {
        proxy_pass http://qqwry-api:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # 超时设置
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # 健康检查
    location /health {
        proxy_pass http://qqwry-api:3000/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # 缓存健康检查结果5秒
        proxy_cache_valid 200 5s;
    }

    # 静态资源缓存
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        proxy_pass http://qqwry-api:3000;
        proxy_set_header Host $host;
        proxy_cache_valid 200 1d;
        add_header Cache-Control "public, max-age=86400";
    }

    # 限制请求频率
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    
    # API请求限流
    location /ip/ {
        proxy_pass http://qqwry-api:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # 限制请求频率
        limit_req zone=api_limit burst=20 nodelay;
    }

    # 批量查询限流更严格
    location /batch {
        proxy_pass http://qqwry-api:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # 限制请求频率
        limit_req zone=api_limit burst=5 nodelay;
    }
}